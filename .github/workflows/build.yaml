name: Build

on: 
  push:
    branches: [ '*' ]
    tags: [ 'v*.*.*' ]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-deps:
    runs-on: ubuntu-latest
    steps:
    - run: echo $GITHUB_REF

    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

  build:
    runs-on: ubuntu-latest
    steps:
    - run: echo $GITHUB_REF

    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Run docker deps
      run: docker-compose --profile test up -d
      
    - name: Build docker test image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-test
        push: false
        load: true
        tags: ${{ github.repository }}-test
    
    - name: Run docker test image
      run: docker run --network host ${{ github.repository }}-test
      
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
        images:
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Login to Github container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push docker images
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags:  ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
    - name: Send Keel notification to staging-koumoul.com
      run: |
        curl -s --fail --show-error -X POST https://keel.admin.staging-koumoul.com/v1/webhooks/native -u ${{ secrets.KEEL_STAGING_USER }}:${{ secrets.KEEL_STAGING_PASSWORD }} -d '{"name": "ghcr.io/${{ github.repository }}", "tag": "${{ steps.docker_meta.outputs.version }}"}'
    - name: Send Keel notification to koumoul.com
      run: |
        curl -s --fail --show-error -X POST https://keel.admin.koumoul.com/v1/webhooks/native -u ${{ secrets.KEEL_PROD_USER }}:${{ secrets.KEEL_PROD_PASSWORD }} -d '{"name": "ghcr.io/${{ github.repository }}", "tag": "${{ steps.docker_meta.outputs.version }}"}'
        